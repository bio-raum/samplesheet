params {

    input           = null
    outdir          = "samplesheet"
    platform        = null

    help            = false

    logo            = "${baseDir}/assets/pipelinelogo.png"
    run_name        = "generate_samplesheet"

    plaintext_email = false
    skip_multiqc    = false
    email           = false

    conda.enabled   = false
    singularity.enabled = false
    docker.enabled  = false
    podman.enabled  = false
    apptainer.enabled = false
    
    max_memory      = 16.GB
    max_cpus        = 8
    max_time        = 240.h
    maxMultiqcEmailFileSize = 25.MB

    multiqc_config  = "${baseDir}/conf/multiqc_config.yaml"
    multiqc_logo    = "${baseDir}/assets/pipelinelogo.png"

    publish_dir_mode    = 'copy'
    custom_config_base = "https://raw.githubusercontent.com/bio-raum/nf-configs/main"
}

manifest {
    name = "bio-raum/samplesheet"
    version = "0.1"
    description = "bio-raum/samplesheet" 
    author = "@marchoeppner"
    homePage = "https://github.com/bio-raum/samplesheet"
    nextflowVersion = "24.04.1"
}

process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
    overwrite = true
    enabled = true
    file = "${params.outdir}/pipeline_info/pipeline_timeline.html"
}
report {
    overwrite = true
    enabled = true
    file = "${params.outdir}/pipeline_info/pipeline_report.html"
}
trace {
    overwrite = true
    enabled = true
    file = "${params.outdir}/pipeline_info/pipeline_trace.txt"
}
dag {
    overwrite = true
    enabled = true
    file = "${params.outdir}/pipeline_info/pipeline_dag.svg"
}

// Custom options for some modules
includeConfig 'conf/modules.config'

// Load centrally stored profiles

// Load centrally stored profiles
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/custom.config" : "/dev/null"

// Default configs to load for all profiles
includeConfig 'conf/base.config'

profiles {

    docker { 
        docker.enabled = true 
    }
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true 
    }
    conda {
        conda.enabled = true
    }
    podman {
        podman.enabled = true
    }
    apptainer {
        apptainer.enabled = true
    }
}
